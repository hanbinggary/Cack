<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
         PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncst.cack.dao.BookingDao">
    <resultMap id="bookingMap" type="com.ncst.cack.dto.BookingDTO">
        <id column="id" property="id" />
        <result column="order_no" property="orderNo" />
        <result column="status" property="status" />
        <result column="cancel_reason" property="cancelReason" />
        <result column="start_check_time" property="startCheckTime" />
        <result column="end_check_time" property="endCheckTime" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_modified" property="gmtModified" />
        <association property="user" javaType="com.ncst.cack.dto.UserDTO">
            <id column="uid" property="id" />
            <result column="nickname" property="nickname" />
            <result column="tel" property="tel" />
            <result column="gender" property="gender" />
            <result column="province" property="province" />
            <result column="city" property="city" />
        </association>
        <association property="bookingTime" javaType="com.ncst.cack.dto.BookingTimeDTO">
            <id column="bid" property="id" />
            <result column="date" property="date" />
            <result column="start_time" property="startTime" />
            <result column="end_time" property="endTime" />
            <result column="bstatus" property="status" />
            <result column="invalid_reason" property="invalidReason" />
        </association>
        <association property="vehicle" javaType="com.ncst.cack.dto.BookingVehicleDTO">
            <id column="vid" property="id" />
            <result column="plate_no" property="plateNo" />
            <result column="vehicle_type" property="vehicleType" />
            <result column="use_character" property="useCharacter" />
            <result column="vin" property="vin" />
            <result column="engine_no" property="engineNo" />
            <result column="odometer" property="odometer" />
            <result column="register_date" property="registerDate" />
        </association>
        <association property="coupon" javaType="com.ncst.cack.dto.UserCouponDTO">
            <id column="cid" property="id" />
            <result column="is_used" property="used" />
            <result column="money" property="money" />
            <result column="cstatus" property="status" />
            <result column="is_expired" property="expired" />
        </association>
    </resultMap>

    <select id="listBooking" resultMap="bookingMap">
        SELECT t1.id, t1.order_no, t1.`status`, t1.cancel_reason, t1.start_check_time, t1.end_check_time,
               t1.gmt_create, t1.gmt_modified, t2.id AS uid, t2.nickname, t2.tel, t2.gender, t2.province,
               t2.city, t3.id AS bid, t3.date, t3.start_time, t3.end_time, t3.`status` AS bstatus,
                t3.invalid_reason, t4.id AS vid, t4.plate_no, t4.vehicle_type, t4.use_character,
                t4.vin, t4.engine_no, t4.odometer, t4.register_date, t5.id AS cid, t5.is_used, t5.money,
                t5.`status` AS cstatus, t5.is_expired
        FROM booking AS t1
        LEFT JOIN `user` AS t2 ON t1.user_id = t2.id
        LEFT JOIN booking_time AS t3 ON t1.booking_time_id = t3.id
        LEFT JOIN vehicle AS t4 ON t1.vehicle_id = t4.id
        LEFT JOIN (SELECT uc.id, uc.is_used, c.money, c.`status`, c.is_expired FROM user_coupon AS uc
            LEFT JOIN coupon AS c ON uc.coupon_id = c.id
        WHERE uc.is_delete = 0) AS t5 ON t1.user_coupon_id = t5.id
        <where>
            t1.is_delete = 0
            <if test="searchText != null">
                and (
                t1.order_no like CONCAT(#{searchText}, '%') or
                t2.nickname like CONCAT(#{searchText}, '%') or
                t4.plate_no like CONCAT('%', #{searchText}, '%')
                )
            </if>
            <if test="filterByOrderStatusList != null">
                and t1.status in
                <foreach collection="filterByOrderStatusList" item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        <if test="orderByGmtCreate == 1">order by t1.gmt_create asc </if>
        <if test="orderByGmtCreate == 2">order by t1.gmt_create desc </if>
    </select>

    <select id="one" parameterType="Long" resultMap="bookingMap">
    SELECT t1.id, t1.order_no, t1.`status`, t1.cancel_reason, t1.start_check_time, t1.end_check_time, t1.gmt_create, t1.gmt_modified,
        t2.id AS uid, t2.nickname, t2.tel, t2.gender, t2.province, t2.city,
        t3.id AS bid, t3.date, t3.start_time, t3.end_time, t3.`status` AS bstatus,
        t3.invalid_reason, t4.id AS vid, t4.plate_no, t4.engine_no, t4.vehicle_type, t4.use_character,
        t4.vin, t4.odometer, t4.register_date, t5.id AS cid, t5.is_used, t5.money,
        t5.`status` AS cstatus, t5.is_expired
    FROM booking AS t1
    LEFT JOIN `user` AS t2 ON t1.user_id = t2.id
    LEFT JOIN booking_time AS t3 ON t1.booking_time_id = t3.id
    LEFT JOIN vehicle AS t4 ON t1.vehicle_id = t4.id
    LEFT JOIN (SELECT uc.id, uc.is_used, c.money, c.`status`, c.is_expired FROM user_coupon AS uc
    LEFT JOIN coupon AS c ON uc.coupon_id = c.id
        WHERE uc.is_delete = 0) AS t5 ON t1.user_coupon_id = t5.id
    where t1.id = #{id} and t1.is_delete = 0
    </select>

    <update id="updateStatusById">
        update booking set status = #{status} where id = #{id}
    </update>

    <update id="updateStartCheckTimeById">
        update booking set start_check_time = #{startCheckTime} where id = #{id}
    </update>

    <update id="updateEndCheckTimeById">
        update booking set end_check_time = #{endCheckTime} where id = #{id}
    </update>

    <update id="updateCancelReasonById">
        update booking set cancel_reason = #{cancelReason}, status = 0 where id = #{id}
    </update>

    <update id="updateBatchStatusAndCancelReasonByBookingTimeIds" parameterType="Long">
        update booking set cancel_reason = '预约过期', status = 0
        where status <![CDATA[!=]]> 0 and booking_time_id in
        <foreach collection="bookingTimeIds" item="bookingTimeId" open="(" close=")" separator=",">
            #{bookingTimeId}
        </foreach>
    </update>

    <update id="updateCancelReasonByBookingTimeId">
        update booking set cancel_reason = #{cancelReason}, status = 0 where booking_time_id = #{bookingTimeId}
    </update>

    <update id="updateBatchCancelReasonByBookingTimeIds">
        update booking set cancel_reason = #{cancelReason}, status = 0 where booking_time_id in
        <foreach collection="bookingTimeIds" item="bookingTimeId" open="(" close=")" separator=",">
            #{bookingTimeId}
        </foreach>
    </update>
</mapper>